#!/usr/bin/env make
override SHELL:=/bin/bash

BLACKBOX_VERSION?=master

BLACKBOX_FLAG__DEBUG_MODE?=$(if $(filter debug,$(MAKECMDGOALS)),yes,no)
BLACKBOX_FLAG__STEP_PROVISION?=yes
BLACKBOX_FLAG__STEP_BUILD?=yes
BLACKBOX_FLAG__STEP_EVALUATE?=yes
BLACKBOX_FLAG__INVENTORY_CACHE_TTL?=60

override BLACKBOX_HOST:=blackbox-$(shell basename $(PWD) | cut -c 1-36)
override BLACKBOX_SPAWN:=blackbox-spawn-$(shell basename $(PWD) | cut -c 1-36)
override BLACKBOX_USER:=$(shell id -u):$(shell id -g)
override BLACKBOX_USER_NAME:=ubuntu
override BLACKBOX_USER_HOME:=/home/$(BLACKBOX_USER_NAME)
override BLACKBOX_USER_QUESTION_DIRECTORY:=$(BLACKBOX_USER_HOME)/$(shell basename $(PWD))

override BLACKBOX_DIR=$(call __PWD__,../../../blackbox)
override BLACKBOX_OPTIONS=$(foreach option, $(filter-out BLACKBOX_DIR BLACKBOX_OPTIONS,$(filter BLACKBOX_%,$(sort $(.VARIABLES)))),-e "$(option)=$($(option))")

define __PWD__=
$(abspath $(dir $(firstword $(MAKEFILE_LIST)))/$(1))
endef

debug:
	$(info $(shell printf "\033[0;37mBLACKBOX_VERSION = $(BLACKBOX_VERSION)\033[0m"))
	$(info $(shell printf "\033[0;37m%s\033[0m" \\))
	$(foreach flag,$(filter BLACKBOX_FLAG__%,$(sort $(.VARIABLES))),$(info $(shell printf "\033[0;37m$(flag) = $($(flag))\033[0m")))
	$(info $(shell printf "\033[0;37m%s\033[0m" \\))
	$(foreach flag,$(filter BLACKBOX_HOST BLACKBOX_SPAWN BLACKBOX_USER%,$(sort $(.VARIABLES))),$(info $(shell printf "\033[0;37m$(flag) = $($(flag))\033[0m")))
	$(info $(shell printf "\033[0;37m%s\033[0m" --))
	$(foreach flag,$(filter BLACKBOX_DIR BLACKBOX_OPTIONS,$(sort $(.VARIABLES))),$(info $(shell printf '\033[0;37m$(flag) = $($(flag))\033[0m')))

all: clean uninstall install setup solution score

install:
	docker run -di --name $(BLACKBOX_HOST) -h $(BLACKBOX_HOST) --privileged -v $(BLACKBOX_DIR):/blackbox:ro -v $(call __PWD__):$(BLACKBOX_USER_HOME):rw ubuntu:bionic >/dev/null
	docker exec -it $(BLACKBOX_HOST) ln -s /blackbox/blackbox /dev/blackbox
	docker exec -it $(BLACKBOX_HOST) groupadd -g $(shell echo $(BLACKBOX_USER) | cut -d ":" -f 2) $(BLACKBOX_USER_NAME)
	docker exec -it $(BLACKBOX_HOST) useradd -u $(shell echo $(BLACKBOX_USER) | cut -d ":" -f 1) -g $(shell echo $(BLACKBOX_USER) | cut -d ":" -f 2) -s /bin/bash -M $(BLACKBOX_USER_NAME)
	docker exec -it $(BLACKBOX_HOST) apt-get update
	docker exec -it -e "DEBIAN_FRONTEND=noninteractive" $(BLACKBOX_HOST) apt-get install -y --no-install-recommends software-properties-common python sudo wget
	docker exec -it -e "DEBIAN_FRONTEND=noninteractive" $(BLACKBOX_HOST) apt-get install -y --no-install-recommends software-properties-common unzip
	docker exec -it $(BLACKBOX_HOST) /bin/bash -c "echo 'shopt -os allexport; . /etc/environment; shopt -ou allexport' >>/root/.bashrc"

setup:
	docker exec -it $(BLACKBOX_OPTIONS) $(BLACKBOX_HOST) /bin/bash $(BLACKBOX_USER_HOME)/setup.sh

solution:
	docker exec -it --user $(BLACKBOX_USER_NAME) $(BLACKBOX_HOST) cp -rT $(BLACKBOX_USER_HOME)/.solution $(BLACKBOX_USER_QUESTION_DIRECTORY)

score:
	docker exec -it $(foreach option,$(BLACKBOX_OPTIONS),-e "$(option)") $(BLACKBOX_HOST) $(SHELL) /home/$(BLACKBOX_USER_NAME)/score.sh

shell:
	docker exec -it -e HISTFILE=/dev/null -w $(BLACKBOX_USER_QUESTION_DIRECTORY) $(BLACKBOX_HOST) $(SHELL)

shell\:spawn:
	docker exec -it $(BLACKBOX_HOST) $(SHELL) -c "docker exec -it -e HISTFILE=/dev/null -w /home/$(BLACKBOX_USER_NAME)/$(shell basename $(call __PWD__)) $(BLACKBOX_SPAWN) $(SHELL)"

uninstall: .confirm
	docker ps -aq -f "name=$(BLACKBOX_HOST)" | xargs -r docker rm -f >/dev/null

prune: .confirm
	docker ps -aq -f "name=blackbox-" | xargs -r docker stop >/dev/null
	docker system prune -a --volumes

clean: .confirm
	$(if $(wildcard $(call __PWD__,$(shell basename $(PWD)))),chattr -iR $(call __PWD__,$(shell basename $(PWD))) >/dev/null; rm -rf $(call __PWD__,$(shell basename $(PWD))))

.confirm:
	printf "Are you sure you want to continue? [y/N] "; read confirmation && [ "$${confirmation:-N}" == "y" ]

.SILENT:
