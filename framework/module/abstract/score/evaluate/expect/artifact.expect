#!/usr/bin/env bash
blackbox.framework.module.abstract.score.evaluate.expect.artifact() {
  export BLACKBOX_ARTIFACT_STORE_CACHE_DIR="/var/save"

  function blackbox.framework.module.abstract.score.evaluate.expect.artifact.collection() {
    declare assert=$(</dev/stdin)

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    readarray -t collection <<<"${assert[*]}"

    for artifact in "${!collection[@]}"; do
      local store_cache="${BLACKBOX_ARTIFACT_STORE_CACHE_DIR}/${collection[$artifact]//[^A-Za-z0-9]/_}.artifact"

      (
        printf "\033[0;35m** ARTIFACT:\033[0m %s \033[0;37m> %s\033[0m\n" "${collection[$artifact]}" "$store_cache"
        printf "\033[0;37m--\033[0m\n"
        printf "\033[0;38m%s\033[0m\n" "$(tee "$store_cache" < <(docker exec -i -w "$BLACKBOX_USER_QUESTION_DIR" "$BLACKBOX_SPAWN" /bin/bash 2>&1 <<<"source /blackbox/blackbox &>/dev/null; ${collection[$artifact]}"))"
        printf "\033[0;37m--\033[0m\n"

        if [ "$artifact" -lt "$((${#collection[@]} - 1))" ]; then
          printf "\n"
        fi
      ) | if (tput setaf &>/dev/null); then cat; else sed "s/\x1b\[[0-9;]*m//g"; fi

      sed -i "s/\x1b\[[0-9;]*m//g" "$store_cache"
    done
  }

  blackbox.framework.module.abstract.score.evaluate.expect.artifact.__init() {
    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    blackbox.framework.inventory.install.directory "$BLACKBOX_ARTIFACT_STORE_CACHE_DIR"
  } && blackbox.framework.module.abstract.score.evaluate.expect.artifact.__init "$@"
}
