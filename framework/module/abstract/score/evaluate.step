#!/usr/bin/env bash
blackbox.framework.module.abstract.score.evaluate ()
{
  typeset -a args=("$@");

  blackbox.framework.import "blackbox.framework.module.abstract.score.evaluate.assert";
  blackbox.framework.import "blackbox.framework.module.abstract.score.evaluate.expect";
  blackbox.framework.import "blackbox.framework.module.abstract.score.evaluate.score";

  local -a from_namespace=(
    blackbox.framework.module.abstract.score.evaluate.expect.artifact.collection
    blackbox.framework.module.abstract.score.evaluate.expect.file.exists
    blackbox.framework.module.abstract.score.evaluate.expect.shell.debug
    blackbox.framework.module.abstract.score.evaluate.expect.shell.failure
    blackbox.framework.module.abstract.score.evaluate.expect.shell.stderr
    blackbox.framework.module.abstract.score.evaluate.expect.shell.stdout
    blackbox.framework.module.abstract.score.evaluate.expect.shell.success
  );

  for namespace in "${from_namespace[@]}"; do
    local to_namespace=${namespace/framework.module.abstract.score.evaluate./};
    local to_namespace_definition=$(declare -f "$namespace");

    if ( ! blackbox.framework.flag.enabled STEP_EVALUATE ); then
      to_namespace_definition="(){ :; }";
    fi

    eval "$(printf "function %s %s" "$to_namespace" "${to_namespace_definition#*"()"}")";
  done;

  : <<< blackbox.module.*.score.evaluate;
}
