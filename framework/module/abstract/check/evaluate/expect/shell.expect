#!/usr/bin/env bash
blackbox.framework.module.abstract.check.evaluate.expect.shell() {
  function blackbox.framework.module.abstract.check.evaluate.expect.shell.debug() {
    # shellcheck disable=SC2155
    declare assert=$(</dev/stdin)

    printf "\n"

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    (
      printf "\033[0;33m** DEBUG\033[0m\n"
      printf "\033[0;37m%s\033[0m\n" "$assert"
      printf "\033[0;37m--\033[0m\n"
      printf "\033[0;37m%s\033[0m\n" "$(cat -n <(docker exec -i -w "$BLACKBOX_USER_QUESTION_DIR" "$BLACKBOX_SPAWN" "$BASH" /dev/stdin "$BLACKBOX_MODULE_NAME" "$BLACKBOX_MODULE_ACTION_NAME" "$BLACKBOX_QUESTION_ID" 2>&1 <<<"source /blackbox/blackbox &>/dev/null; ${assert}"))"
      printf "\033[0;37m--\033[0m\n"
    ) | if ( tput setaf &>/dev/null ); then cat; else sed "s/\x1b\[[0-9;]*m//g"; fi

    kill $$
  }

  function blackbox.framework.module.abstract.check.evaluate.expect.shell.failure() {
    # shellcheck disable=SC2155
    declare assert=$(</dev/stdin)

    typeset score=$1
    typeset message_true=$2
    typeset message_false=$3
    typeset message_args=("${@:4}")

    printf "\n"

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    if ( ! (docker exec -i -w "$BLACKBOX_USER_QUESTION_DIR" "$BLACKBOX_SPAWN" "$BASH" /dev/stdin "$BLACKBOX_MODULE_NAME" "$BLACKBOX_MODULE_ACTION_NAME" "$BLACKBOX_QUESTION_ID" &>/dev/null <<<"source /blackbox/blackbox &>/dev/null; ${assert}") ); then
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.true "$assert" "$score" "$(printf "$message_true" "${message_args[@]:-%s}")"
    else
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.false "$assert" "$score" "$(printf "$message_false" "${message_args[@]:-%s}")"
    fi
  }

  function blackbox.framework.module.abstract.check.evaluate.expect.shell.stderr() {
    # shellcheck disable=SC2155
    declare assert=$(</dev/stdin)

    typeset score=$1
    typeset message_true=$2
    typeset message_false=$3
    typeset message_args=("${@:4}")

    printf "\n"

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    if ( grep -q . <(docker exec -i -w "$BLACKBOX_USER_QUESTION_DIR" "$BLACKBOX_SPAWN" "$BASH" /dev/stdin "$BLACKBOX_MODULE_NAME" "$BLACKBOX_MODULE_ACTION_NAME" "$BLACKBOX_QUESTION_ID" 2>&1 1>/dev/null <<<"source /blackbox/blackbox &>/dev/null" <<<"$assert") ); then
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.true "$assert" "$score" "$(printf "$message_true" "${message_args[@]:-%s}")"
    else
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.false "$assert" "$score" "$(printf "$message_false" "${message_args[@]:-%s}")"
    fi
  }

  function blackbox.framework.module.abstract.check.evaluate.expect.shell.stdout() {
    # shellcheck disable=SC2155
    declare assert=$(</dev/stdin)

    typeset score=$1
    typeset message_true=$2
    typeset message_false=$3
    typeset message_args=("${@:4}")

    printf "\n"

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    if ( grep -q . <(docker exec -i -w "$BLACKBOX_USER_QUESTION_DIR" "$BLACKBOX_SPAWN" "$BASH" /dev/stdin "$BLACKBOX_MODULE_NAME" "$BLACKBOX_MODULE_ACTION_NAME" "$BLACKBOX_QUESTION_ID" 2>/dev/null <<<"source /blackbox/blackbox &>/dev/null; ${assert}") ); then
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.true "$assert" "$score" "$(printf "$message_true" "${message_args[@]:-%s}")"
    else
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.false "$assert" "$score" "$(printf "$message_false" "${message_args[@]:-%s}")"
    fi
  }

  function blackbox.framework.module.abstract.check.evaluate.expect.shell.success() {
    # shellcheck disable=SC2155
    declare assert=$(</dev/stdin)

    typeset score=$1
    typeset message_true=$2
    typeset message_false=$3
    typeset message_args=("${@:4}")

    printf "\n"

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    if ( docker exec -i -w "$BLACKBOX_USER_QUESTION_DIR" "$BLACKBOX_SPAWN" "$BASH" &>/dev/null <<<"source /blackbox/blackbox &>/dev/null; ${assert}" ); then
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.true "$assert" "$score" "$(printf "$message_true" "${message_args[@]:-%s}")"
    else
      # shellcheck disable=SC2059
      blackbox.framework.module.abstract.check.evaluate.assert.false "$assert" "$score" "$(printf "$message_false" "${message_args[@]:-%s}")"
    fi
  }
}
