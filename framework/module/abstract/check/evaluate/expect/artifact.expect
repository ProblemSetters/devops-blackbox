#!/usr/bin/env bash
blackbox.framework.module.abstract.check.evaluate.expect.artifact() {
  function blackbox.framework.module.abstract.check.evaluate.expect.artifact.collection() {
    # shellcheck disable=SC2155
    declare assert=$(</dev/stdin)

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    readarray -t collection <<<"${assert[*]}"

    for artifact in "${!collection[@]}"; do
      local artifact_cache="${BLACKBOX_STORAGE_DIR}/${collection[$artifact]//[^A-Za-z0-9]/_}.artifact"
      # shellcheck disable=SC2155
      local artifact_stream=$(cat -n <(tee "$artifact_cache" < <(docker exec -i -w "$BLACKBOX_USER_QUESTION_DIR" "$BLACKBOX_SPAWN" "$BASH" 2>&1 <<<"source /blackbox/blackbox &>/dev/null; ${collection[$artifact]}")))

      sed -i "s/\x1b\[[0-9;]*m//g" "$artifact_cache"

      (
        printf "\033[0;35m** ARTIFACT:\033[0m %s \033[0;37m> %s (%d bytes)\033[0m\n" "${collection[$artifact]//[^A-Za-z0-9]/_}.artifact" "$artifact_cache" "$(wc -c < "$artifact_cache")"
        printf "\033[0;37m%s\033[0m\n" "${collection[$artifact]}"
        printf "\033[0;37m--\033[0m\n"

        if [ "$(wc -l <<<"$artifact_stream")" -gt "$BLACKBOX_BUILD_STREAM_DISPLAY_LINES" ]; then
          printf "\033[0;38m%s\n" "$(head -n "$(awk '{ printf "%.0f", sqrt($1); }' <<<"$BLACKBOX_BUILD_STREAM_DISPLAY_LINES")" <<<"$artifact_stream")"
          printf "\033[0;37m        ...\033[0m\n"
          printf "\033[0;38m%s\033[0m\n" "$(tail -n "$(awk '{ printf "%.0f", sqrt($1); }' <<<"$BLACKBOX_BUILD_STREAM_DISPLAY_LINES")" <<<"$artifact_stream")"
        else
          printf "\033[0;38m%s\033[0m\n" "$artifact_stream"
        fi

        printf "\033[0;37m--\033[0m\n"

        if [ "$artifact" -lt "$((${#collection[@]} - 1))" ]; then
          printf "\n"
        fi
      ) | if ( tput setaf &>/dev/null ); then cat; else sed "s/\x1b\[[0-9;]*m//g"; fi
    done
  }
}
