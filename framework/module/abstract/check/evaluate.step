#!/usr/bin/env bash
# @file framework/module/abstract/check/evaluate.step
# @brief https://github.com/ProblemSetters/devops-blackbox/blob/master/framework/module/abstract/check/evaluate.step
# @description Abstract module "check" action "evaluate" step

# @section blackbox.framework.module.abstract.check.*

# Implements a common logical part of "check" action "evaluate" step that each module inherits
#
# @arg $1 type=...mixed Step args
#
# @example
#   #!/usr/bin/env bash
#   # Example of a module "check" action "evaluate" step inheriting an abstraction
#   blackbox.module.my-module.check.evaluate() {
#     # do something (if needed), then specify where the abstraction should be applied
#     : <<< blackbox.framework.module.abstract.check.evaluate:step
#     # do something (if needed)
#   }
blackbox.framework.module.abstract.check.evaluate() {
  # shellcheck disable=SC2034
  typeset -a args=("$@")

  {
    blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<"evaluate"
  }

  blackbox.framework.import blackbox.framework.module.abstract.check.evaluate.assert
  blackbox.framework.import blackbox.framework.module.abstract.check.evaluate.expect
  blackbox.framework.import blackbox.framework.module.abstract.check.evaluate.score

  local -a from_namespace=(
    blackbox.framework.module.abstract.check.evaluate.expect.artifact.collection
    blackbox.framework.module.abstract.check.evaluate.expect.file.exists
    blackbox.framework.module.abstract.check.evaluate.expect.shell.debug
    blackbox.framework.module.abstract.check.evaluate.expect.shell.failure
    blackbox.framework.module.abstract.check.evaluate.expect.shell.stderr
    blackbox.framework.module.abstract.check.evaluate.expect.shell.stdout
    blackbox.framework.module.abstract.check.evaluate.expect.shell.success
  )

  if ( blackbox.framework.flag.enabled STEP_EVALUATE ); then
    for namespace in "${from_namespace[@]}"; do
      # shellcheck disable=SC2155
      local definition=$(declare -f "$namespace")

      eval "$(printf "function %s %s" "${namespace/framework.module.abstract.check.evaluate./}" "${definition#*"()"}")"
    done
  else
    (
      printf "\033[0;36m** BLACKBOX_FLAG__STEP_EVALUATE:\033[0m %s\n" "$BLACKBOX_FLAG__STEP_EVALUATE"
      printf "\033[0;37m--\033[0m\n"
      cat -n <(printf "BLACKBOX_FLAG__STEP_EVALUATE=%s\n" "$BLACKBOX_FLAG__STEP_EVALUATE")
      printf "\033[0;37m--\033[0m\n"
    ) | if ( tput setaf &>/dev/null ); then cat; else sed "s/\x1b\[[0-9;]*m//g"; fi

    for namespace in "${from_namespace[@]}"; do
      eval "$(printf "function %s (){ :; }" "${namespace/framework.module.abstract.check.evaluate./}")"
    done
  fi

  : <<< blackbox.module.*.check.evaluate
}
