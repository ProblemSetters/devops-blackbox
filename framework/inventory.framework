#!/usr/bin/env bash
blackbox.framework.inventory() {
  blackbox.framework.inventory.install() {
    function blackbox.framework.inventory.install.directory() {
      typeset destination=$1
      typeset owner=${2:-$(cut -d ":" -f 1 <<<"$BLACKBOX_USER")}
      typeset group=${3:-$(cut -d ":" -f 2 <<<"$BLACKBOX_USER"))}
      typeset mode=${4:-0775}

      {
        blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
      }

      install -o "$owner" -g "$group" -m "$mode" -d "$destination"
    }

    function blackbox.framework.inventory.install.file() {
      # shellcheck disable=SC2155
      declare source=$(</dev/stdin)

      typeset destination=$1
      typeset owner=${2:-$(cut -d ":" -f 1 <<<"$BLACKBOX_USER")}
      typeset group=${3:-$(cut -d ":" -f 2 <<<"$BLACKBOX_USER")}
      typeset mode=${4:-0664}

      {
        blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
      }

      install -o "$owner" -g "$group" -m 0775 -d "$(dirname "$destination")" && {
        if [ -n "$source" ]; then
          install -o "$owner" -g "$group" -m "$mode" /dev/stdin "$destination" <<<"$source"
        else
          install -o "$owner" -g "$group" -m "$mode" /dev/null "$destination"
        fi
      }
    }
  }; blackbox.framework.inventory.install

  blackbox.framework.inventory.heap() {
    function blackbox.framework.inventory.heap.allocate() {
      {
        blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
      }

      blackbox.framework.inventory.install.directory "$BLACKBOX_HEAP_DIR" && {
        # shellcheck disable=SC2164
        pushd "$BLACKBOX_HEAP_DIR"
      }
    }

    function blackbox.framework.inventory.heap.release() {
      {
        blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
      }

      # shellcheck disable=SC2164
      popd
    }
  }; blackbox.framework.inventory.heap

  function blackbox.framework.inventory.provision() {
    typeset name=$1
    typeset -a with_deps=("${@:2}")

    {
      blackbox.framework.trace "${FUNCNAME[0]}" "$*" <<<""
    }

    if [ ! -e "/blackbox/framework/inventory/${name}.inventory" ]; then
      blackbox.framework.exception.raise "inventory '%s' not found" "$name"
    fi

    blackbox.framework.import "blackbox.framework.inventory.${name}" "$name" "${with_deps[@]}"
  }
}
