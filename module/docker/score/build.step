#!/usr/bin/env bash
blackbox.module.docker.score.build() {
  typeset -a args=("$@")

  blackbox.trace.entrypoint build.step "${FUNCNAME[0]}" "$*" "$(printf "BLACKBOX_FLAG__STEP_BUILD=%s" "$BLACKBOX_FLAG__STEP_BUILD")"

  if ( ! blackbox.flag.enabled STEP_BUILD ); then
    printf "\n"
    printf "skip: BLACKBOX_FLAG__STEP_BUILD=no\n"

    return
  fi

  printf "\n"

  if ( blackbox.flag.is STEP_BUILD yes ); then
    docker ps -aq | xargs -r docker stop >/dev/null
    docker system prune -af --volumes
    docker run -di --name "$BLACKBOX_SPAWN" -h "$BLACKBOX_SPAWN" --privileged -v /blackbox:/blackbox:ro -v "${BLACKBOX_USER_HOME}:${BLACKBOX_USER_HOME}:rw" ubuntu:bionic >/dev/null
    docker exec -i "$BLACKBOX_SPAWN" ln -s /blackbox/blackbox /dev/blackbox
    docker exec -i "$BLACKBOX_SPAWN" groupadd -g "$(echo "$BLACKBOX_USER" | cut -d ":" -f 2)" "$BLACKBOX_USER_NAME"
    docker exec -i "$BLACKBOX_SPAWN" useradd -u "$(echo "$BLACKBOX_USER" | cut -d ":" -f 1)" -g "$(echo "$BLACKBOX_USER" | cut -d ":" -f 2)"  -s /bin/bash -M "$BLACKBOX_USER_NAME"
    docker exec -i "$BLACKBOX_SPAWN" apt-get update
    docker exec -i -e "DEBIAN_FRONTEND=noninteractive" "$BLACKBOX_SPAWN" apt-get install -y --no-install-recommends software-properties-common python
    docker exec -i -e "DEBIAN_FRONTEND=noninteractive" "$BLACKBOX_SPAWN" apt-get install -y --no-install-recommends sudo wget
    docker exec -i "$BLACKBOX_SPAWN" /bin/bash -c "echo 'shopt -os allexport; . /etc/environment; shopt -ou allexport' >>/root/.bashrc"
    docker exec -i "$BLACKBOX_SPAWN" /bin/bash -c "source /dev/blackbox >/dev/null; blackbox.inventory.provision docker-ce && { usermod -a -G docker ${BLACKBOX_USER_NAME}; service docker start; }"
  else
    docker exec -i "$BLACKBOX_SPAWN" /bin/bash -c "docker ps -aq | xargs -r docker stop" >/dev/null
    docker exec -i "$BLACKBOX_SPAWN" docker system prune -af --volumes
  fi

  if [ -n "$BLACKBOX_BUILD_WITH_OPTS" ]; then
    printf "\n"
    printf "BLACKBOX_BUILD_WITH_OPTS=%s\n" "$BLACKBOX_BUILD_WITH_OPTS"
    docker exec -i -w "$BLACKBOX_USER_QUESTION_DIRECTORY" "$BLACKBOX_SPAWN" /bin/bash -c "source /dev/blackbox >/dev/null; ${BLACKBOX_BUILD_WITH_OPTS}"
  fi

  if ( ! docker exec -i -w "$BLACKBOX_USER_QUESTION_DIRECTORY" "$BLACKBOX_SPAWN" test -f "script.sh" ); then
    blackbox.exception.raise "File 'script.sh' does not exist"
  fi

  if ( blackbox.flag.enabled DEBUG_MODE ); then
    docker exec -i -w "$BLACKBOX_USER_QUESTION_DIRECTORY" "$BLACKBOX_SPAWN" /bin/bash -c "source /dev/blackbox >/dev/null; printf '\n'; . script.sh"
  else
    docker exec -i -w "$BLACKBOX_USER_QUESTION_DIRECTORY" "$BLACKBOX_SPAWN" /bin/bash -c "source /dev/blackbox >/dev/null; printf '\n'; . script.sh" 2>&1 | sed "s/Partial Credit/*POSSIBLE_INJECTION*/g"
  fi

  if [ -n "$BLACKBOX_BUILD_SOLUTION_WITH_OPTS" ]; then
    printf "\n"
    printf "BLACKBOX_BUILD_SOLUTION_WITH_OPTS=%s\n" "$BLACKBOX_BUILD_SOLUTION_WITH_OPTS"
    docker exec -i -w "$BLACKBOX_USER_QUESTION_DIRECTORY" "$BLACKBOX_SPAWN" /bin/bash -c "source /dev/blackbox >/dev/null; ${BLACKBOX_BUILD_SOLUTION_WITH_OPTS}"
  fi
}; blackbox.module.docker.score.build "$@"
