#!/usr/bin/env bash

blackbox.module.ansible.score.expector() {
  readonly BLACKBOX_EXPECTOR_SCORE_SCENARIO=$0
  readonly BLACKBOX_EXPECTOR_SCORE_STORAGE="/tmp/expector.score-${RANDOM}"

  local -i blackbox_expector_expect_total=0

  blackbox.module.ansible.score.expector.assert() {
    function blackbox.module.ansible.score.expector.assert.true() {
        typeset assert_score=$1
        typeset assert_message=$2

        if [[ ! "$assert_score" =~ ^[0-9]+([.][0-9]+)?$  ]]; then
          if [[ "$assert_score" == "-" ]]; then
            assert_score=0
          else
            local expect_total=$(awk '/^cat <<ASSERT/ { asserts++ } END { print asserts }' $BLACKBOX_EXPECTOR_SCORE_SCENARIO)

            assert_score=$(awk -v expect_total="$expect_total" '{ current_score += $1 } END { expect_current=NR; print int((100 - current_score) / (expect_total - expect_current) + 0.5) }' "$BLACKBOX_EXPECTOR_SCORE_STORAGE")
          fi
        fi

        echo "$assert_score" >>"$BLACKBOX_EXPECTOR_SCORE_STORAGE"
        printf "[SUCCESS] %s.\n" "$assert_message"
        printf "Partial Credit: %s\n\n" "$assert_score"

        true
    }

    function blackbox.module.ansible.score.expector.assert.false() {
      typeset assert_score=$1
      typeset assert_message=$2

      echo "$assert_score" >>"$BLACKBOX_EXPECTOR_SCORE_STORAGE"
      printf "[FAIL] %s.\n" "$assert_message"
      printf "Partial Credit: 0\n\n"

      false
    }
  } && blackbox.module.ansible.score.expector.assert

  blackbox.module.ansible.score.expector.expect() {
    blackbox.module.ansible.score.expector.expect.debug() {
      function blackbox.module.ansible.score.expector.expect.debug.shell() {
        local assert="$(cat)"

        printf "[DEBUG] %s.\n" "$assert"
        docker exec -i "$BLACKBOX_SPAWN" "$BASH" -c "$assert"
      }
    }; blackbox.module.ansible.score.expector.expect.debug

    blackbox.module.ansible.score.expector.expect.docker() {
      function blackbox.module.ansible.score.expector.expect.docker.container() {
        typeset assert_score=$1
        typeset assert_message_true=$2
        typeset assert_message_false=$3

        local assert="docker ps -aq -f "name=$(cat)""

        if [ -n "$(docker exec "$BLACKBOX_SPAWN" "$BASH" -c "$assert")" ]; then
          blackbox.module.ansible.score.expector.assert.true "$assert_score" "${assert_message_true:-$assert}"
        else
          blackbox.module.ansible.score.expector.assert.false "$assert_score" "${assert_message_false:-$assert}"
        fi
      }
    }; blackbox.module.ansible.score.expector.expect.docker

    blackbox.module.ansible.score.expector.expect.file() {
      function blackbox.module.ansible.score.expector.expect.file.exists() {
        typeset assert_score=$1
        typeset assert_message_true=$2
        typeset assert_message_false=$3

        local assert=$(cat)

        if ( docker exec "$BLACKBOX_SPAWN" "$BASH" -c "test -e $assert" ); then
          blackbox.module.ansible.score.expector.assert.true "$assert_score" "${assert_message_true:-$assert}"
        else
          blackbox.module.ansible.score.expector.assert.false "$assert_score" "${assert_message_false:-$assert}"
        fi
      }
    }; blackbox.module.ansible.score.expector.expect.file

    blackbox.module.ansible.score.expector.expect.shell() {
      function blackbox.module.ansible.score.expector.expect.shell.success() {
        typeset assert_score=$1
        typeset assert_message_true=$2
        typeset assert_message_false=$3

        local assert=$(cat)

        if ( docker exec "$BLACKBOX_SPAWN" "$BASH" -c "$assert" >/dev/null 2>&1 ); then
          blackbox.module.ansible.score.expector.assert.true "$assert_score" "${assert_message_true:-$assert}"
        else
          blackbox.module.ansible.score.expector.assert.false "$assert_score" "${assert_message_false:-$assert}"
        fi
      }
    }; blackbox.module.ansible.score.expector.expect.shell
  }; blackbox.module.ansible.score.expector.expect

  blackbox.module.ansible.score.expector.__init() {
    blackbox.inventory.provision mawk
    : >"$BLACKBOX_EXPECTOR_SCORE_STORAGE"
  } && blackbox.module.ansible.score.expector.__init
}; blackbox.module.ansible.score.expector "$@"
